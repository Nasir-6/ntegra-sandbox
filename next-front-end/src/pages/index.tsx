import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import TodoCard from "./TodoCard";
import TextField from "@mui/material/TextField";
import { Box, Button, Typography } from "@mui/material";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

type Todo = {
  id: number;
  todo: string;
  isDone: boolean;
};

export default function Home() {
  const [todo, setTodo] = useState("");
  const [todos, setTodos] = useState<Todo[]>([]);

  useEffect(() => {
    fetch("http://localhost:8787/api/todos")
      .then((response) => response.json())
      .then((res) => setTodos(res.data));
  }, []);

  const addTodo = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    // Simple POST request with a JSON body using fetch
    const requestOptions = {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ todo }),
    };
    fetch("http://localhost:8787/api/todos", requestOptions)
      .then((response) => response.json())
      .then((data) => setTodos([...todos, data]));
    console.log("todo", todo);
    setTodo("");
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Typography variant="h2" component="h1">
          Todo App
        </Typography>
        <Box
          component={"form"}
          onSubmit={addTodo}
          sx={{ display: "flex", alignItems: "center", gap: 1, minWidth: 500 }}
        >
          <TextField
            id="outlined-basic"
            size="small"
            label="Add todo..."
            variant="outlined"
            value={todo}
            onChange={(e) => setTodo(e.target.value)}
            sx={{ flexGrow: 1 }}
          />
          <Button variant="contained" type="submit">
            Add
          </Button>
        </Box>
        <Box p={2} sx={{ display: "flex", flexDirection: "column", gap: 2 }}>
          {todos && todos.map((todo) => <TodoCard key={todo.id} todo={todo} />)}
        </Box>
      </main>
    </>
  );
}
